version: '2.2'

services:
  eureka:
    build:
      context: .
      args:
        service: eureka
    container_name: eureka
    ports:
      - "8761:8761"
    depends_on:
      config:
        condition: service_healthy
    environment:
      - CONFIGSERVER_URI=http://config:8888
      - EUREKA_HOST=eureka
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  gateway:
    build:
      context: .
      args:
        service: gateway
    container_name: gateway
    ports:
      - "8080:8080"
    depends_on:
      eureka:
        condition: service_healthy
    environment:
      - CONFIGSERVER_URI=http://config:8888
      - EUREKA_HOST=eureka
  user:
    build:
      context: .
      args:
        service: user
    container_name: user
    depends_on:
      eureka:
        condition: service_healthy
      db:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      - CONFIGSERVER_URI=http://config:8888
      - EUREKA_HOST=eureka
      - HOST=db
      - PORT=${PG_PORT}
      - NAME=${POSTGRES_DB}
      - USER=${POSTGRES_USER}
      - PASS=${POSTGRES_PASSWORD}

  db:
    image: postgres:14
    container_name: db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=${PGDATA}
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - ${PG_PORT}:${PG_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 1s
      retries: 10
    restart: unless-stopped




